from pwn import *

# Generate a cyclic pattern of length 200
extra_commands_before_payload = "69\n"

pattern = extra_commands_before_payload.encode() + cyclic(100)

# Save the pattern to a file
with open('payload', 'wb') as f:
    f.write(pattern)

# Instructions to run with GDB
print("Run the following commands in GDB to find the offset:")
print("gdb ./vulnerable_program")
print("run < payload")
print("info registers")
print("Use the displayed value to find the offset:")
print("python -c 'from pwn import *; print(cyclic_find(0xVALUE))'")
print("Replace VALUE with the value displayed in GDB - the one in front of the EIP register")